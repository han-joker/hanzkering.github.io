<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo搭建博客，发布到GitHub]]></title>
    <url>%2Fhexo%2Fhexo-github%2F</url>
    <content type="text"><![CDATA[1 需求博客之前是wordpress搭建的，也很好用。现在想使用一个基于markdown文件为中心的博客系统，就锁定了hexo这个项目。hexo是基于Node.js的，提供markdown支持，草稿，单页，分类，标签，主题，i18n，永久链接，静态生成，部署等很常用的博客系统功能。其主页地址为：Hexo，大家可以获取更详细的信息。下面就和大家说说过程，大致有博客搭建，部署到github，还有另一个git服务器（个人的服务器）上的过程。 下面的操作的个人电脑为windows系统（win10)。 2 hexo搭建博客此步骤完成后，可以在自己本地电脑上，看到完整的博客系统了。 2.1 快速开始在安装好 Node.js, Git的基础上，执行下面代码即可12345$ npm install -g hexo-cli$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install$ hexo server 浏览器访问http://localhost:4000，即可看到你的博客。 如果没有Node.js或Git，请按照下面的步骤执行。 2.2 安装Node.jsNode.js是基于Chrome V8 JavaScript引擎的JavaScript运行环境(runtime built)。安装方式请参考Node.js官网 ，或者本站的Node.js相关内容。安装完毕后，应出现如下效果，表示安装成功：1234C:\Users\Kang&gt; node -vv8.12.0PS C:\Users\Kang&gt; npm -v6.4.1 安装Node.js还可以使用nvm（Node Version Manager，Node.js的版本管理工具）。使用nvm可以方便的安装Node.js的各种版本，以及在版本间进行切换。安装使用方式请参考windows下的nvm和linux下的nvm或者本站的Node.js相关内容。 2.3 安装GitGit是开源免费的分布式版本控制系统是用来处理代码量由小到大相关问题的。安装方式请参考Git官网，或者本站的Git相关内容。安装完毕后，应出现如下效果，表示安装成功：12C:\Users\Kang&gt; git versiongit version 2.19.1.windows.1 2.4 安装Hexo使用npm按照hexo即可，运行如下代码全局按照hexo-cli这个hexo的命令行工具1$ npm install -g hexo-cli 安装完毕后，应出现如下效果，表示安装成功：1234567891011121314151617C:\Users\Kang&gt; hexo -vhexo-cli: 1.1.0os: Windows_NT 10.0.17134 win32 x64http_parser: 2.8.0node: 8.12.0v8: 6.2.414.66uv: 1.19.2zlib: 1.2.11ares: 1.10.1-DEVmodules: 57nghttp2: 1.32.0napi: 3openssl: 1.0.2picu: 60.1unicode: 10.0cldr: 32.0tz: 2017c 2.5 Hexo建站安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件：123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 选择好需要的站点目录（目录地址不要有中文）。例如选择 D:\projects\practice\blog&gt; 作为建站目录，那么执行如下操作即可：12345C:\Users\Kang&gt; d:D:\&gt; cd .\projects\practiceD:\projects\practice&gt; hexo init blogD:\projects\practice&gt; cd blogD:\projects\practice\blog&gt; npm install 此时一个基本的博客已经建立完毕了。 2.6 运行Hexo博客进入博客目录，执行 hexo server 即可运行hexo服务器。123D:\projects\practice\blog&gt; hexo serverINFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 此时，浏览器访问http://localhost:4000，即可看到你的博客。效果如下： 至此，hexo搭建的博客已经完成。该博客使用方法，如何发文章，分类，标签等操作请参考Hexo文档，本文不再赘述。 3.发布到GitHubGitHub上允许我们搭建自己的静态站点，在不购买自己的服务器情况下，可以有自己的博客。需要用到Hexo提供的发布相关功能，同时需要在github上做一定的配置。 3.1 注册GitHub 已有账号的跳过此步骤 注册操作，跟着GitHub引导完成即可，GitHub注册 3.2 创建版本库登录后，创建新版本库https://github.com/new 注意：版本库名字强烈建议是 &lt;你的用户&gt;.github.io 这种格式创建完毕后，就可以使用 &lt;你的用户&gt;.github.io 这种方式访问你的github博客地址，但现在访问应该不会成功，因为是一个新创建的版本库，是空的，一无所有….。接下来就把我们本地的博客内容部署到这个github版本库上。 3.3 部署到GitHub回到我们本地的博客项目中，hexo对于基于git的部署提供了一个工具hexo-deployer-git，我们直接安装使即可。 安装 hexo-deployer-git1$ npm install hexo-deployer-git --save 3.4 GitHub的SSH keys设置在部署之前，需要保证GitHub可以验证我们的机器，需要将本地的RAS-publicKey告知给GitHub，步骤如下： 3.4.1 本地RAS密钥对生成进入到 用户目录/.ssh目录下，查看是否已经存在了， 私钥id_rsa 公钥id_rsa.pub1234C:\Users\Kang&gt; cd .sshC:\Users\Kang\.ssh&gt; dir-a---- 2018/10/10 19:46 1679 id_rsa-a---- 2018/10/10 19:46 403 id_rsa.pub 上面的输出表示已经存在。若不存在，执行 ssh-keygen 生成即可（持续回车即可）：123456789101112131415161718192021C:\Users\Kang\.ssh&gt; ssh-keygen.exe -t rsaGenerating public/private rsa key pair.Enter file in which to save the key (C:\Users\Kang/.ssh/id_rsa):Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in C:\Users\Kang/.ssh/id_rsa.Your public key has been saved in C:\Users\Kang/.ssh/id_rsa.pub.The key fingerprint is:SHA256:ymf2laAmgHVsGakavggdXrzORtVRNxkuKYq444C5Irs kang@V1N3RYQG70NI7YDThe key&apos;s randomart image is:+---[RSA 2048]----+| .. .. +o || ..o. +.. || ...=...o . || o+++.... . || +o=oo. S . ||o.=.oo . . . . ||=.o= + * o ||++..+ * . . ||Eo.. . |+----[SHA256]-----+ -t rsa 表示使用的加密类型。生成过程可以输入一些信息，简单起见，全部回车即可。 生成完毕后，目录中应该存在相应文件了。 3.4.2 告知GitHub公钥在GitHub的用户设置中，找到ssh key的设置：SSH Keys点击 New SSH Key 新建将生成的公钥id_rsa.pub内容拷贝到输入框中，起名标志即可。保存即可。此时GitHub已经和我们本地电脑建立的信任关系。我们就可以将内容发布到GitHub上了。 3.5 修改博客的部署配置需要指定部署类型，版本库地址，分支，消息等信息12345/_config.ymldeploy: type: git repo: https://github.com/yourusername/yourusername.github.io branch: master 3.6 执行部署部署的过程，是将本地博客先生成静态文件，然后将静态文件发布到指定的版本库中。因此总的过程应该是，清理之前的静态文件，生成新静态文件，发布到版本库 这个步骤，执行下面的代码即可：12$ hexo clean$ hexo deploy 部署deploy时会自动生成，因此可以省略 $ hexo generate 操作。 第一次部署的过程中，会出现要求输入GitHub账号信息的步骤，请输入即可： 等等过后，如果出现 Deploy done，类似的信息，说明部署完成。 也可以去版本库中查看是否已经存在代码了，版本库地址就是：https://github.com/yourusername/yourusername.github.io 部署完毕，就可以在 yourusername.github.io 看到你的博客了。 3.6 绑定域名4 总述完成以上部署后，博客完毕。写作流程就是，本地编辑md文件，本地预览ok后，发布到github即可！写作过程，请参考：Hexo文档。 有问题，欢迎留言讨论！]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
        <tag>github</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
</search>
